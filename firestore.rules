
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requester is an Admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow users to create their own profile during signup
      allow create: if request.auth.uid == userId;
      // Allow users to read their own profile, and Admins to read any profile
      allow read: if request.auth.uid == userId || isAdmin();
      // Allow users to update their own profile, and Admins to update any profile
      allow update: if request.auth.uid == userId || isAdmin();
      // Only Admins can delete user profiles
      allow delete: if isAdmin();
    }

    // Rules for content collections (problems, solutions, ideas)
    match /{collection:(problems|solutions|ideas)}/{docId} {
      // Any authenticated user can read content
      allow read: if request.auth != null;
      
      // Users can only create content where they are listed as the creator
      allow create: if request.auth.uid == request.resource.data.creator.userId;
      
      // Allow general updates (editing) only by the document's creator or an Admin.
      // Also allow specific updates for upvoting by any authenticated user.
      allow update: if (request.auth.uid == resource.data.creator.userId || isAdmin()) ||
                      (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['upvotes', 'upvotedBy']));
      
      // Only the document's creator or an Admin can delete it
      allow delete: if request.auth.uid == resource.data.creator.userId || isAdmin();
    }
  }
}
