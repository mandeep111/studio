
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get a user's role data.
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    // Helper function to check if the write is ONLY for upvoting.
    function isUpvote(request, resource) {
      // This checks that the only fields being changed in an update are 'upvotes' and 'upvotedBy'.
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['upvotes', 'upvotedBy']);
    }

    // Rules for user profiles
    match /users/{userId} {
      // Any authenticated user can read any profile.
      allow read: if request.auth != null;
      // A user can only create their own profile document.
      allow create: if request.auth.uid == userId;
      // A user can update their own profile, or an admin can update any profile.
      allow update: if request.auth.uid == userId || getUserData(request.auth.uid).role == 'Admin';
      // Only an admin can delete a user profile.
      allow delete: if getUserData(request.auth.uid).role == 'Admin';
    }

    // Combined rules for problems, solutions, and ideas
    match /{collection}/{docId}
      where collection in ['problems', 'solutions', 'ideas'] {
      
      // Any authenticated user can read any document.
      allow read: if request.auth != null;
      // Any authenticated user can create a document.
      allow create: if request.auth != null;

      // Update is allowed if:
      // 1. The user is the original creator.
      // 2. The user is an Admin.
      // 3. The update is only changing the upvote fields.
      allow update: if (request.auth.uid == resource.data.creator.userId || getUserData(request.auth.uid).role == 'Admin') || isUpvote(request, resource);
      
      // Delete is allowed if:
      // 1. The user is the original creator.
      // 2. The user is an Admin.
      allow delete: if request.auth.uid == resource.data.creator.userId || getUserData(request.auth.uid).role == 'Admin';
    }
  }
}
