
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // User profiles can only be modified by the user themselves or an Admin.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId || isAdmin();
    }

    // Rules for problems, solutions, and ideas collections
    match /{collection}/{docId} where collection in ['problems', 'solutions', 'ideas'] {
      // Any authenticated user can read or create content.
      allow read, create: if request.auth != null;

      // Update logic:
      // Allow if the user is only upvoting (modifying 'upvotes' and 'upvotedBy').
      // OR if the user is the original creator or an Admin for any other type of update.
      allow update: if request.auth != null && (
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['upvotes', 'upvotedBy'])) ||
        (resource.data.creator.userId == request.auth.uid || isAdmin())
      );

      // Delete logic:
      // Only the original creator or an Admin can delete content.
      allow delete: if request.auth != null && (resource.data.creator.userId == request.auth.uid || isAdmin());
    }
  }
}
